@page "/mealIdeas"
@using AIChef.Shared;
@using System.Text.Json;
@inject NavigationManager navigationManager;
@inject HttpClient Http;



@if (loaded == true)
    {
    <div class="container">
        <h3 class="mb-3 mt-3">Pick what you like</h3>
        <div class="list-group">
            @foreach (var item in ideas)
                {
                <button @onclick="() => GetRecipe(item.index)" class="list-group-item list-group-item-action list-group-item-success p-2">
                    <div class="d-flex w-100 justify-content-sm-between">
                        <h2 class="mb-1 fw-bold">@item.title</h2>
                    </div>
                        <p class="mb-1">@item.description</p>
                </button>
                }
        </div>
    </div>
    }
    else
    {
        <div class="container">
            <p>Loading...</p>
        </div>
    }




@code {
    private List<RecipeIdeas> ideas = new List<RecipeIdeas>();

    private bool loaded = false;

    [CascadingParameter]
    private RecipeState rState { get; set; }

    private readonly JsonSerializerOptions _jsonOptions = new JsonSerializerOptions()
    {
        PropertyNameCaseInsensitive = true,
        PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
        DefaultIgnoreCondition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull
    };

    protected override void OnInitialized()
    {
        if (rState is null)
        {
            navigationManager.NavigateTo("/", forceLoad: true);
            return;
        }
        if (!rState.ideas.Any())
        {
            GetIdeas();
        }
        else
        {
            loaded = true;
            ideas = rState.ideas;
            StateHasChanged();
        }

    }

    private async void GetIdeas()
    {
        string baseuri = "Recipe/GetRecipeIdeas";
        loaded = false;

        RecipeParms recipeParms = new RecipeParms()
        {
            MealTime = rState.MealTime,
            isChinese = rState.isChinese,
            Ingredients = rState.ingredients
        };
        // Call  web api controller
        try
        {
            HttpResponseMessage response = await Http.PostAsJsonAsync(baseuri, recipeParms, _jsonOptions);
            response.EnsureSuccessStatusCode();

            ideas = (await response.Content.ReadFromJsonAsync<List<RecipeIdeas>>())!;
            rState.ideas = ideas;

            loaded = true;
            StateHasChanged();
        }
        catch
        {
            Console.WriteLine("Error: Could not fetch recipe ideas");
        }
    }

    private void GetRecipe(int index)
    {
        navigationManager.NavigateTo($"/mealRecipe/{index}");

    }

}

